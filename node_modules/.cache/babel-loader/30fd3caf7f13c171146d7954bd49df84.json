{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHttp = requestConfig => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method,\n        headers: requestConfig.headers,\n        body: JSON.stringify(requestConfig.body)\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n};\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useCallback","useHttp","requestConfig","_s","isLoading","setIsLoading","error","setError","sendRequest","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","loadedTasks","taskKey","push","id","text","setTasks","err","message"],"sources":["C:/Users/hp/react/custom hooks/src/hooks/use-http.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nconst useHttp = (requestConfig) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(\r\n                requestConfig.url,\r\n                {\r\n                    method: requestConfig.method,\r\n                    headers: requestConfig.headers,\r\n                    body: JSON.stringify(requestConfig.body)\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed!');\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            const loadedTasks = [];\r\n\r\n            for (const taskKey in data) {\r\n                loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n            }\r\n\r\n            setTasks(loadedTasks);\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n}\r\n\r\nexport default useHttp;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,MAAMC,OAAO,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CACxBR,aAAa,CAACS,GAAG,EACjB;QACIC,MAAM,EAAEV,aAAa,CAACU,MAAM;QAC5BC,OAAO,EAAEX,aAAa,CAACW,OAAO;QAC9BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,aAAa,CAACY,IAAI;MAC3C,CACJ,CAAC;MAED,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIH,IAAI,EAAE;QACxBE,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEN,IAAI,CAACG,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MAC/D;MAEAC,QAAQ,CAACL,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACVpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAvB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;AAEL,CAAC;AAAAF,EAAA,CApCKF,OAAO;AAsCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}